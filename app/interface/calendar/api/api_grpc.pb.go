// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.27.1
// source: proto/api.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CalendarInterface_AddFinanceBill_FullMethodName         = "/com.liBong.forShare.interface.calendar.CalendarInterface/addFinanceBill"
	CalendarInterface_UpdateFinanceBill_FullMethodName      = "/com.liBong.forShare.interface.calendar.CalendarInterface/updateFinanceBill"
	CalendarInterface_DeleteFinanceBill_FullMethodName      = "/com.liBong.forShare.interface.calendar.CalendarInterface/deleteFinanceBill"
	CalendarInterface_FinanceBillByID_FullMethodName        = "/com.liBong.forShare.interface.calendar.CalendarInterface/financeBillByID"
	CalendarInterface_SearchFinanceBillsPage_FullMethodName = "/com.liBong.forShare.interface.calendar.CalendarInterface/searchFinanceBillsPage"
)

// CalendarInterfaceClient is the client API for CalendarInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CalendarInterfaceClient interface {
	// 添加日历账单
	AddFinanceBill(ctx context.Context, in *AddFinanceBillReq, opts ...grpc.CallOption) (*AddFinanceBillResp, error)
	// 修改日历账单
	UpdateFinanceBill(ctx context.Context, in *UpdateFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 删除日历账单
	DeleteFinanceBill(ctx context.Context, in *DeleteFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 日历账单详情
	FinanceBillByID(ctx context.Context, in *FinanceBillByIDReq, opts ...grpc.CallOption) (*FinanceBillByIDResp, error)
	// 分页查询
	SearchFinanceBillsPage(ctx context.Context, in *SearchFinanceBillsPageReq, opts ...grpc.CallOption) (*SearchFinanceBillsPageResp, error)
}

type calendarInterfaceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalendarInterfaceClient(cc grpc.ClientConnInterface) CalendarInterfaceClient {
	return &calendarInterfaceClient{cc}
}

func (c *calendarInterfaceClient) AddFinanceBill(ctx context.Context, in *AddFinanceBillReq, opts ...grpc.CallOption) (*AddFinanceBillResp, error) {
	out := new(AddFinanceBillResp)
	err := c.cc.Invoke(ctx, CalendarInterface_AddFinanceBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarInterfaceClient) UpdateFinanceBill(ctx context.Context, in *UpdateFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CalendarInterface_UpdateFinanceBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarInterfaceClient) DeleteFinanceBill(ctx context.Context, in *DeleteFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CalendarInterface_DeleteFinanceBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarInterfaceClient) FinanceBillByID(ctx context.Context, in *FinanceBillByIDReq, opts ...grpc.CallOption) (*FinanceBillByIDResp, error) {
	out := new(FinanceBillByIDResp)
	err := c.cc.Invoke(ctx, CalendarInterface_FinanceBillByID_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarInterfaceClient) SearchFinanceBillsPage(ctx context.Context, in *SearchFinanceBillsPageReq, opts ...grpc.CallOption) (*SearchFinanceBillsPageResp, error) {
	out := new(SearchFinanceBillsPageResp)
	err := c.cc.Invoke(ctx, CalendarInterface_SearchFinanceBillsPage_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarInterfaceServer is the server API for CalendarInterface service.
// All implementations must embed UnimplementedCalendarInterfaceServer
// for forward compatibility
type CalendarInterfaceServer interface {
	// 添加日历账单
	AddFinanceBill(context.Context, *AddFinanceBillReq) (*AddFinanceBillResp, error)
	// 修改日历账单
	UpdateFinanceBill(context.Context, *UpdateFinanceBillReq) (*emptypb.Empty, error)
	// 删除日历账单
	DeleteFinanceBill(context.Context, *DeleteFinanceBillReq) (*emptypb.Empty, error)
	// 日历账单详情
	FinanceBillByID(context.Context, *FinanceBillByIDReq) (*FinanceBillByIDResp, error)
	// 分页查询
	SearchFinanceBillsPage(context.Context, *SearchFinanceBillsPageReq) (*SearchFinanceBillsPageResp, error)
	mustEmbedUnimplementedCalendarInterfaceServer()
}

// UnimplementedCalendarInterfaceServer must be embedded to have forward compatible implementations.
type UnimplementedCalendarInterfaceServer struct {
}

func (UnimplementedCalendarInterfaceServer) AddFinanceBill(context.Context, *AddFinanceBillReq) (*AddFinanceBillResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFinanceBill not implemented")
}
func (UnimplementedCalendarInterfaceServer) UpdateFinanceBill(context.Context, *UpdateFinanceBillReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFinanceBill not implemented")
}
func (UnimplementedCalendarInterfaceServer) DeleteFinanceBill(context.Context, *DeleteFinanceBillReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFinanceBill not implemented")
}
func (UnimplementedCalendarInterfaceServer) FinanceBillByID(context.Context, *FinanceBillByIDReq) (*FinanceBillByIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinanceBillByID not implemented")
}
func (UnimplementedCalendarInterfaceServer) SearchFinanceBillsPage(context.Context, *SearchFinanceBillsPageReq) (*SearchFinanceBillsPageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchFinanceBillsPage not implemented")
}
func (UnimplementedCalendarInterfaceServer) mustEmbedUnimplementedCalendarInterfaceServer() {}

// UnsafeCalendarInterfaceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CalendarInterfaceServer will
// result in compilation errors.
type UnsafeCalendarInterfaceServer interface {
	mustEmbedUnimplementedCalendarInterfaceServer()
}

func RegisterCalendarInterfaceServer(s grpc.ServiceRegistrar, srv CalendarInterfaceServer) {
	s.RegisterService(&CalendarInterface_ServiceDesc, srv)
}

func _CalendarInterface_AddFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFinanceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarInterfaceServer).AddFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CalendarInterface_AddFinanceBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarInterfaceServer).AddFinanceBill(ctx, req.(*AddFinanceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarInterface_UpdateFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFinanceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarInterfaceServer).UpdateFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CalendarInterface_UpdateFinanceBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarInterfaceServer).UpdateFinanceBill(ctx, req.(*UpdateFinanceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarInterface_DeleteFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFinanceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarInterfaceServer).DeleteFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CalendarInterface_DeleteFinanceBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarInterfaceServer).DeleteFinanceBill(ctx, req.(*DeleteFinanceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarInterface_FinanceBillByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinanceBillByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarInterfaceServer).FinanceBillByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CalendarInterface_FinanceBillByID_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarInterfaceServer).FinanceBillByID(ctx, req.(*FinanceBillByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarInterface_SearchFinanceBillsPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchFinanceBillsPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarInterfaceServer).SearchFinanceBillsPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CalendarInterface_SearchFinanceBillsPage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarInterfaceServer).SearchFinanceBillsPage(ctx, req.(*SearchFinanceBillsPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

// CalendarInterface_ServiceDesc is the grpc.ServiceDesc for CalendarInterface service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CalendarInterface_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "com.liBong.forShare.interface.calendar.CalendarInterface",
	HandlerType: (*CalendarInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addFinanceBill",
			Handler:    _CalendarInterface_AddFinanceBill_Handler,
		},
		{
			MethodName: "updateFinanceBill",
			Handler:    _CalendarInterface_UpdateFinanceBill_Handler,
		},
		{
			MethodName: "deleteFinanceBill",
			Handler:    _CalendarInterface_DeleteFinanceBill_Handler,
		},
		{
			MethodName: "financeBillByID",
			Handler:    _CalendarInterface_FinanceBillByID_Handler,
		},
		{
			MethodName: "searchFinanceBillsPage",
			Handler:    _CalendarInterface_SearchFinanceBillsPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api.proto",
}
