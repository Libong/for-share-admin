// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.1
// source: proto/api.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "libong/common/protoc/plugin/auth/api"
	_ "libong/common/protoc/plugin/router/api"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId    string      `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`            //记录编号
	GoodName    string      `protobuf:"bytes,2,opt,name=good_name,json=goodName,proto3" json:"good_name,omitempty"`            //物品名称
	Status      uint32      `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                               //记录状态 1使用中 2历史
	BuyAt       int64       `protobuf:"varint,4,opt,name=buy_at,json=buyAt,proto3" json:"buy_at,omitempty"`                    //购买时间
	ProductAt   int64       `protobuf:"varint,5,opt,name=product_at,json=productAt,proto3" json:"product_at,omitempty"`        //生产日期
	OverdueAt   int64       `protobuf:"varint,6,opt,name=overdue_at,json=overdueAt,proto3" json:"overdue_at,omitempty"`        //过期时间
	StarLevel   uint32      `protobuf:"varint,7,opt,name=star_level,json=starLevel,proto3" json:"star_level,omitempty"`        //星级
	Picture     string      `protobuf:"bytes,8,opt,name=picture,proto3" json:"picture,omitempty"`                              //图片
	Comment     string      `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`                              //评价
	EstablishAt int64       `protobuf:"varint,10,opt,name=establish_at,json=establishAt,proto3" json:"establish_at,omitempty"` //创建时间
	Categories  []*Category `protobuf:"bytes,11,rep,name=categories,proto3" json:"categories,omitempty"`                       //分类
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *Record) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *Record) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *Record) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Record) GetBuyAt() int64 {
	if x != nil {
		return x.BuyAt
	}
	return 0
}

func (x *Record) GetProductAt() int64 {
	if x != nil {
		return x.ProductAt
	}
	return 0
}

func (x *Record) GetOverdueAt() int64 {
	if x != nil {
		return x.OverdueAt
	}
	return 0
}

func (x *Record) GetStarLevel() uint32 {
	if x != nil {
		return x.StarLevel
	}
	return 0
}

func (x *Record) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *Record) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Record) GetEstablishAt() int64 {
	if x != nil {
		return x.EstablishAt
	}
	return 0
}

func (x *Record) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type AddRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodName    string   `protobuf:"bytes,2,opt,name=good_name,json=goodName,proto3" json:"good_name,omitempty"`           //物品名称
	BuyAt       int64    `protobuf:"varint,4,opt,name=buy_at,json=buyAt,proto3" json:"buy_at,omitempty"`                   //购买时间
	ProductAt   int64    `protobuf:"varint,5,opt,name=product_at,json=productAt,proto3" json:"product_at,omitempty"`       //生产日期
	OverdueAt   int64    `protobuf:"varint,6,opt,name=overdue_at,json=overdueAt,proto3" json:"overdue_at,omitempty"`       //过期时间
	StarLevel   uint32   `protobuf:"varint,7,opt,name=star_level,json=starLevel,proto3" json:"star_level,omitempty"`       //星级
	Picture     string   `protobuf:"bytes,8,opt,name=picture,proto3" json:"picture,omitempty"`                             //图片
	Comment     string   `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`                             //评价
	CategoryIds []string `protobuf:"bytes,10,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"` //分类
}

func (x *AddRecordReq) Reset() {
	*x = AddRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordReq) ProtoMessage() {}

func (x *AddRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordReq.ProtoReflect.Descriptor instead.
func (*AddRecordReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *AddRecordReq) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *AddRecordReq) GetBuyAt() int64 {
	if x != nil {
		return x.BuyAt
	}
	return 0
}

func (x *AddRecordReq) GetProductAt() int64 {
	if x != nil {
		return x.ProductAt
	}
	return 0
}

func (x *AddRecordReq) GetOverdueAt() int64 {
	if x != nil {
		return x.OverdueAt
	}
	return 0
}

func (x *AddRecordReq) GetStarLevel() uint32 {
	if x != nil {
		return x.StarLevel
	}
	return 0
}

func (x *AddRecordReq) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *AddRecordReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *AddRecordReq) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

type AddRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
}

func (x *AddRecordResp) Reset() {
	*x = AddRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordResp) ProtoMessage() {}

func (x *AddRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordResp.ProtoReflect.Descriptor instead.
func (*AddRecordResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *AddRecordResp) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type UpdateRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId    string   `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`           //记录编号
	GoodName    string   `protobuf:"bytes,2,opt,name=good_name,json=goodName,proto3" json:"good_name,omitempty"`           //物品名称
	Status      uint32   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                              //记录状态 1使用中 2历史
	BuyAt       int64    `protobuf:"varint,4,opt,name=buy_at,json=buyAt,proto3" json:"buy_at,omitempty"`                   //购买时间
	ProductAt   int64    `protobuf:"varint,5,opt,name=product_at,json=productAt,proto3" json:"product_at,omitempty"`       //生产日期
	OverdueAt   int64    `protobuf:"varint,6,opt,name=overdue_at,json=overdueAt,proto3" json:"overdue_at,omitempty"`       //过期时间
	StarLevel   uint32   `protobuf:"varint,7,opt,name=star_level,json=starLevel,proto3" json:"star_level,omitempty"`       //星级
	Picture     string   `protobuf:"bytes,8,opt,name=picture,proto3" json:"picture,omitempty"`                             //图片
	Comment     string   `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`                             //评价
	CategoryIds []string `protobuf:"bytes,10,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"` //分类
}

func (x *UpdateRecordReq) Reset() {
	*x = UpdateRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecordReq) ProtoMessage() {}

func (x *UpdateRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecordReq.ProtoReflect.Descriptor instead.
func (*UpdateRecordReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRecordReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *UpdateRecordReq) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *UpdateRecordReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateRecordReq) GetBuyAt() int64 {
	if x != nil {
		return x.BuyAt
	}
	return 0
}

func (x *UpdateRecordReq) GetProductAt() int64 {
	if x != nil {
		return x.ProductAt
	}
	return 0
}

func (x *UpdateRecordReq) GetOverdueAt() int64 {
	if x != nil {
		return x.OverdueAt
	}
	return 0
}

func (x *UpdateRecordReq) GetStarLevel() uint32 {
	if x != nil {
		return x.StarLevel
	}
	return 0
}

func (x *UpdateRecordReq) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *UpdateRecordReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdateRecordReq) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

type DeleteRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
}

func (x *DeleteRecordReq) Reset() {
	*x = DeleteRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordReq) ProtoMessage() {}

func (x *DeleteRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordReq.ProtoReflect.Descriptor instead.
func (*DeleteRecordReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRecordReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type RecordByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
}

func (x *RecordByIDReq) Reset() {
	*x = RecordByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordByIDReq) ProtoMessage() {}

func (x *RecordByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordByIDReq.ProtoReflect.Descriptor instead.
func (*RecordByIDReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

func (x *RecordByIDReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type RecordByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *Record `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *RecordByIDResp) Reset() {
	*x = RecordByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordByIDResp) ProtoMessage() {}

func (x *RecordByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordByIDResp.ProtoReflect.Descriptor instead.
func (*RecordByIDResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

func (x *RecordByIDResp) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartAt int64 `protobuf:"varint,1,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt   int64 `protobuf:"varint,2,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *TimeRange) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *TimeRange) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

type RecordCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuzzyGoodName    string     `protobuf:"bytes,1,opt,name=fuzzy_good_name,json=fuzzyGoodName,proto3" json:"fuzzy_good_name,omitempty"` //物品名称
	RecordIds        []string   `protobuf:"bytes,2,rep,name=record_ids,json=recordIds,proto3" json:"record_ids,omitempty"`
	Status           uint32     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                                              //记录状态 1使用中 2历史
	BugAtRange       *TimeRange `protobuf:"bytes,4,opt,name=bug_at_range,json=bugAtRange,proto3" json:"bug_at_range,omitempty"`                   //购买时间范围
	ProductAtRange   *TimeRange `protobuf:"bytes,5,opt,name=product_at_range,json=productAtRange,proto3" json:"product_at_range,omitempty"`       //生产日期范围
	OverdueAtRange   *TimeRange `protobuf:"bytes,6,opt,name=overdue_at_range,json=overdueAtRange,proto3" json:"overdue_at_range,omitempty"`       //过期时间范围
	EstablishAtRange *TimeRange `protobuf:"bytes,7,opt,name=establish_at_range,json=establishAtRange,proto3" json:"establish_at_range,omitempty"` //创建时间范围
	StarLevels       []uint32   `protobuf:"varint,10,rep,packed,name=star_levels,json=starLevels,proto3" json:"star_levels,omitempty"`            //星级
}

func (x *RecordCondition) Reset() {
	*x = RecordCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordCondition) ProtoMessage() {}

func (x *RecordCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordCondition.ProtoReflect.Descriptor instead.
func (*RecordCondition) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

func (x *RecordCondition) GetFuzzyGoodName() string {
	if x != nil {
		return x.FuzzyGoodName
	}
	return ""
}

func (x *RecordCondition) GetRecordIds() []string {
	if x != nil {
		return x.RecordIds
	}
	return nil
}

func (x *RecordCondition) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RecordCondition) GetBugAtRange() *TimeRange {
	if x != nil {
		return x.BugAtRange
	}
	return nil
}

func (x *RecordCondition) GetProductAtRange() *TimeRange {
	if x != nil {
		return x.ProductAtRange
	}
	return nil
}

func (x *RecordCondition) GetOverdueAtRange() *TimeRange {
	if x != nil {
		return x.OverdueAtRange
	}
	return nil
}

func (x *RecordCondition) GetEstablishAtRange() *TimeRange {
	if x != nil {
		return x.EstablishAtRange
	}
	return nil
}

func (x *RecordCondition) GetStarLevels() []uint32 {
	if x != nil {
		return x.StarLevels
	}
	return nil
}

type SearchRecordsPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *RecordCondition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	PageNum   uint32           `protobuf:"varint,100,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize  uint32           `protobuf:"varint,101,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SearchRecordsPageReq) Reset() {
	*x = SearchRecordsPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRecordsPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecordsPageReq) ProtoMessage() {}

func (x *SearchRecordsPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecordsPageReq.ProtoReflect.Descriptor instead.
func (*SearchRecordsPageReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

func (x *SearchRecordsPageReq) GetCondition() *RecordCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *SearchRecordsPageReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchRecordsPageReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchRecordsPageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Record `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchRecordsPageResp) Reset() {
	*x = SearchRecordsPageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRecordsPageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRecordsPageResp) ProtoMessage() {}

func (x *SearchRecordsPageResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRecordsPageResp.ProtoReflect.Descriptor instead.
func (*SearchRecordsPageResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

func (x *SearchRecordsPageResp) GetList() []*Record {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SearchRecordsPageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_api_proto protoreflect.FileDescriptor

var file_proto_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x08,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf5, 0x02, 0x0a,
	0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x79,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x75, 0x79, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x41, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c,
	0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x62, 0x75, 0x79, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x76, 0x65, 0x72,
	0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x75, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x2c, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0xae, 0x02, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x62, 0x75, 0x79, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x76, 0x65, 0x72, 0x64,
	0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x76, 0x65,
	0x72, 0x64, 0x75, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x0e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x22, 0x3d, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41,
	0x74, 0x22, 0xf9, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x66, 0x75, 0x7a, 0x7a, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x62, 0x75, 0x67, 0x5f, 0x61, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0a, 0x62, 0x75, 0x67,
	0x41, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66,
	0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0e, 0x6f,
	0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x41, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x5d, 0x0a,
	0x12, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x10, 0x65, 0x73, 0x74, 0x61,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x22, 0xa3, 0x01,
	0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x53, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x6f, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x32, 0xcd, 0x05, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42,
	0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x10, 0xa0, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x06, 0x22, 0x04, 0x2f, 0x61, 0x64,
	0x64, 0x12, 0x72, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66,
	0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x13, 0xa0, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x22, 0x07, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f,
	0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x13, 0xa0, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09,
	0x22, 0x07, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c,
	0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x13, 0xa0, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12,
	0x07, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0xa6, 0x01, 0x0a, 0x11, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x3a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x3b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6c, 0x69, 0x42, 0x6f, 0x6e, 0x67, 0x2e, 0x66, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0xa0, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x70, 0x61, 0x67,
	0x65, 0x1a, 0x11, 0x82, 0xb5, 0x18, 0x0d, 0x6c, 0x69, 0x62, 0x6f, 0x6e, 0x67, 0x2f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData = file_proto_api_proto_rawDesc
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_proto_rawDescData)
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_api_proto_goTypes = []interface{}{
	(*Category)(nil),              // 0: com.liBong.forShare.interface.record.Category
	(*Record)(nil),                // 1: com.liBong.forShare.interface.record.Record
	(*AddRecordReq)(nil),          // 2: com.liBong.forShare.interface.record.AddRecordReq
	(*AddRecordResp)(nil),         // 3: com.liBong.forShare.interface.record.AddRecordResp
	(*UpdateRecordReq)(nil),       // 4: com.liBong.forShare.interface.record.UpdateRecordReq
	(*DeleteRecordReq)(nil),       // 5: com.liBong.forShare.interface.record.DeleteRecordReq
	(*RecordByIDReq)(nil),         // 6: com.liBong.forShare.interface.record.RecordByIDReq
	(*RecordByIDResp)(nil),        // 7: com.liBong.forShare.interface.record.RecordByIDResp
	(*TimeRange)(nil),             // 8: com.liBong.forShare.interface.record.TimeRange
	(*RecordCondition)(nil),       // 9: com.liBong.forShare.interface.record.RecordCondition
	(*SearchRecordsPageReq)(nil),  // 10: com.liBong.forShare.interface.record.SearchRecordsPageReq
	(*SearchRecordsPageResp)(nil), // 11: com.liBong.forShare.interface.record.SearchRecordsPageResp
	(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_proto_api_proto_depIdxs = []int32{
	0,  // 0: com.liBong.forShare.interface.record.Record.categories:type_name -> com.liBong.forShare.interface.record.Category
	1,  // 1: com.liBong.forShare.interface.record.RecordByIDResp.record:type_name -> com.liBong.forShare.interface.record.Record
	8,  // 2: com.liBong.forShare.interface.record.RecordCondition.bug_at_range:type_name -> com.liBong.forShare.interface.record.TimeRange
	8,  // 3: com.liBong.forShare.interface.record.RecordCondition.product_at_range:type_name -> com.liBong.forShare.interface.record.TimeRange
	8,  // 4: com.liBong.forShare.interface.record.RecordCondition.overdue_at_range:type_name -> com.liBong.forShare.interface.record.TimeRange
	8,  // 5: com.liBong.forShare.interface.record.RecordCondition.establish_at_range:type_name -> com.liBong.forShare.interface.record.TimeRange
	9,  // 6: com.liBong.forShare.interface.record.SearchRecordsPageReq.condition:type_name -> com.liBong.forShare.interface.record.RecordCondition
	1,  // 7: com.liBong.forShare.interface.record.SearchRecordsPageResp.list:type_name -> com.liBong.forShare.interface.record.Record
	2,  // 8: com.liBong.forShare.interface.record.RecordInterface.addRecord:input_type -> com.liBong.forShare.interface.record.AddRecordReq
	4,  // 9: com.liBong.forShare.interface.record.RecordInterface.updateRecord:input_type -> com.liBong.forShare.interface.record.UpdateRecordReq
	5,  // 10: com.liBong.forShare.interface.record.RecordInterface.deleteRecord:input_type -> com.liBong.forShare.interface.record.DeleteRecordReq
	6,  // 11: com.liBong.forShare.interface.record.RecordInterface.recordByID:input_type -> com.liBong.forShare.interface.record.RecordByIDReq
	10, // 12: com.liBong.forShare.interface.record.RecordInterface.searchRecordsPage:input_type -> com.liBong.forShare.interface.record.SearchRecordsPageReq
	3,  // 13: com.liBong.forShare.interface.record.RecordInterface.addRecord:output_type -> com.liBong.forShare.interface.record.AddRecordResp
	12, // 14: com.liBong.forShare.interface.record.RecordInterface.updateRecord:output_type -> google.protobuf.Empty
	12, // 15: com.liBong.forShare.interface.record.RecordInterface.deleteRecord:output_type -> google.protobuf.Empty
	7,  // 16: com.liBong.forShare.interface.record.RecordInterface.recordByID:output_type -> com.liBong.forShare.interface.record.RecordByIDResp
	11, // 17: com.liBong.forShare.interface.record.RecordInterface.searchRecordsPage:output_type -> com.liBong.forShare.interface.record.SearchRecordsPageResp
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRecordsPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRecordsPageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_rawDesc = nil
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}
