// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.27.1
// source: proto/api.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FinanceBillService_AddFinanceBill_FullMethodName         = "/com.libong.forShare.service.financeBill.FinanceBillService/addFinanceBill"
	FinanceBillService_UpdateFinanceBill_FullMethodName      = "/com.libong.forShare.service.financeBill.FinanceBillService/updateFinanceBill"
	FinanceBillService_DeleteFinanceBill_FullMethodName      = "/com.libong.forShare.service.financeBill.FinanceBillService/deleteFinanceBill"
	FinanceBillService_FinanceBillByID_FullMethodName        = "/com.libong.forShare.service.financeBill.FinanceBillService/financeBillByID"
	FinanceBillService_SearchFinanceBillsPage_FullMethodName = "/com.libong.forShare.service.financeBill.FinanceBillService/searchFinanceBillsPage"
	FinanceBillService_CountFinanceBill_FullMethodName       = "/com.libong.forShare.service.financeBill.FinanceBillService/countFinanceBill"
)

// FinanceBillServiceClient is the client API for FinanceBillService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FinanceBillServiceClient interface {
	// 添加记录
	AddFinanceBill(ctx context.Context, in *AddFinanceBillReq, opts ...grpc.CallOption) (*AddFinanceBillResp, error)
	// 修改记录
	UpdateFinanceBill(ctx context.Context, in *UpdateFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 删除记录
	DeleteFinanceBill(ctx context.Context, in *DeleteFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 记录详情
	FinanceBillByID(ctx context.Context, in *FinanceBillByIDReq, opts ...grpc.CallOption) (*FinanceBillByIDResp, error)
	// 分页查询
	SearchFinanceBillsPage(ctx context.Context, in *SearchFinanceBillsPageReq, opts ...grpc.CallOption) (*SearchFinanceBillsPageResp, error)
	// 查询记录总数
	CountFinanceBill(ctx context.Context, in *CountFinanceBillReq, opts ...grpc.CallOption) (*CountFinanceBillResp, error)
}

type financeBillServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFinanceBillServiceClient(cc grpc.ClientConnInterface) FinanceBillServiceClient {
	return &financeBillServiceClient{cc}
}

func (c *financeBillServiceClient) AddFinanceBill(ctx context.Context, in *AddFinanceBillReq, opts ...grpc.CallOption) (*AddFinanceBillResp, error) {
	out := new(AddFinanceBillResp)
	err := c.cc.Invoke(ctx, FinanceBillService_AddFinanceBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeBillServiceClient) UpdateFinanceBill(ctx context.Context, in *UpdateFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FinanceBillService_UpdateFinanceBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeBillServiceClient) DeleteFinanceBill(ctx context.Context, in *DeleteFinanceBillReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FinanceBillService_DeleteFinanceBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeBillServiceClient) FinanceBillByID(ctx context.Context, in *FinanceBillByIDReq, opts ...grpc.CallOption) (*FinanceBillByIDResp, error) {
	out := new(FinanceBillByIDResp)
	err := c.cc.Invoke(ctx, FinanceBillService_FinanceBillByID_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeBillServiceClient) SearchFinanceBillsPage(ctx context.Context, in *SearchFinanceBillsPageReq, opts ...grpc.CallOption) (*SearchFinanceBillsPageResp, error) {
	out := new(SearchFinanceBillsPageResp)
	err := c.cc.Invoke(ctx, FinanceBillService_SearchFinanceBillsPage_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeBillServiceClient) CountFinanceBill(ctx context.Context, in *CountFinanceBillReq, opts ...grpc.CallOption) (*CountFinanceBillResp, error) {
	out := new(CountFinanceBillResp)
	err := c.cc.Invoke(ctx, FinanceBillService_CountFinanceBill_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinanceBillServiceServer is the server API for FinanceBillService service.
// All implementations must embed UnimplementedFinanceBillServiceServer
// for forward compatibility
type FinanceBillServiceServer interface {
	// 添加记录
	AddFinanceBill(context.Context, *AddFinanceBillReq) (*AddFinanceBillResp, error)
	// 修改记录
	UpdateFinanceBill(context.Context, *UpdateFinanceBillReq) (*emptypb.Empty, error)
	// 删除记录
	DeleteFinanceBill(context.Context, *DeleteFinanceBillReq) (*emptypb.Empty, error)
	// 记录详情
	FinanceBillByID(context.Context, *FinanceBillByIDReq) (*FinanceBillByIDResp, error)
	// 分页查询
	SearchFinanceBillsPage(context.Context, *SearchFinanceBillsPageReq) (*SearchFinanceBillsPageResp, error)
	// 查询记录总数
	CountFinanceBill(context.Context, *CountFinanceBillReq) (*CountFinanceBillResp, error)
	mustEmbedUnimplementedFinanceBillServiceServer()
}

// UnimplementedFinanceBillServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFinanceBillServiceServer struct {
}

func (UnimplementedFinanceBillServiceServer) AddFinanceBill(context.Context, *AddFinanceBillReq) (*AddFinanceBillResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFinanceBill not implemented")
}
func (UnimplementedFinanceBillServiceServer) UpdateFinanceBill(context.Context, *UpdateFinanceBillReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFinanceBill not implemented")
}
func (UnimplementedFinanceBillServiceServer) DeleteFinanceBill(context.Context, *DeleteFinanceBillReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFinanceBill not implemented")
}
func (UnimplementedFinanceBillServiceServer) FinanceBillByID(context.Context, *FinanceBillByIDReq) (*FinanceBillByIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinanceBillByID not implemented")
}
func (UnimplementedFinanceBillServiceServer) SearchFinanceBillsPage(context.Context, *SearchFinanceBillsPageReq) (*SearchFinanceBillsPageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchFinanceBillsPage not implemented")
}
func (UnimplementedFinanceBillServiceServer) CountFinanceBill(context.Context, *CountFinanceBillReq) (*CountFinanceBillResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountFinanceBill not implemented")
}
func (UnimplementedFinanceBillServiceServer) mustEmbedUnimplementedFinanceBillServiceServer() {}

// UnsafeFinanceBillServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FinanceBillServiceServer will
// result in compilation errors.
type UnsafeFinanceBillServiceServer interface {
	mustEmbedUnimplementedFinanceBillServiceServer()
}

func RegisterFinanceBillServiceServer(s grpc.ServiceRegistrar, srv FinanceBillServiceServer) {
	s.RegisterService(&FinanceBillService_ServiceDesc, srv)
}

func _FinanceBillService_AddFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFinanceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceBillServiceServer).AddFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinanceBillService_AddFinanceBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceBillServiceServer).AddFinanceBill(ctx, req.(*AddFinanceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceBillService_UpdateFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFinanceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceBillServiceServer).UpdateFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinanceBillService_UpdateFinanceBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceBillServiceServer).UpdateFinanceBill(ctx, req.(*UpdateFinanceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceBillService_DeleteFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFinanceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceBillServiceServer).DeleteFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinanceBillService_DeleteFinanceBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceBillServiceServer).DeleteFinanceBill(ctx, req.(*DeleteFinanceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceBillService_FinanceBillByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinanceBillByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceBillServiceServer).FinanceBillByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinanceBillService_FinanceBillByID_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceBillServiceServer).FinanceBillByID(ctx, req.(*FinanceBillByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceBillService_SearchFinanceBillsPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchFinanceBillsPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceBillServiceServer).SearchFinanceBillsPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinanceBillService_SearchFinanceBillsPage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceBillServiceServer).SearchFinanceBillsPage(ctx, req.(*SearchFinanceBillsPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceBillService_CountFinanceBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountFinanceBillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceBillServiceServer).CountFinanceBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FinanceBillService_CountFinanceBill_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceBillServiceServer).CountFinanceBill(ctx, req.(*CountFinanceBillReq))
	}
	return interceptor(ctx, in, info, handler)
}

// FinanceBillService_ServiceDesc is the grpc.ServiceDesc for FinanceBillService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FinanceBillService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "com.libong.forShare.service.financeBill.FinanceBillService",
	HandlerType: (*FinanceBillServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addFinanceBill",
			Handler:    _FinanceBillService_AddFinanceBill_Handler,
		},
		{
			MethodName: "updateFinanceBill",
			Handler:    _FinanceBillService_UpdateFinanceBill_Handler,
		},
		{
			MethodName: "deleteFinanceBill",
			Handler:    _FinanceBillService_DeleteFinanceBill_Handler,
		},
		{
			MethodName: "financeBillByID",
			Handler:    _FinanceBillService_FinanceBillByID_Handler,
		},
		{
			MethodName: "searchFinanceBillsPage",
			Handler:    _FinanceBillService_SearchFinanceBillsPage_Handler,
		},
		{
			MethodName: "countFinanceBill",
			Handler:    _FinanceBillService_CountFinanceBill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api.proto",
}
